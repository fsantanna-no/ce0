data List = Empty | Item List
data Type = Unit | Tuple [Type] | Union [Type]

<?^>

<(), 

data Expr = Add Expr Expr | Func Stmt
data Stmt = Set ID Expr | Seq Stmt Stmt

struct Type {
    int tag;
    union {
        void unit;
        List* tuple;
        List* union;
    }
};

struct List {
    struct Type type;
    struct List* next;
}

tp = Type { xxx

var tp: Type = <.Tuple
                    new <.Item [<.Unit>,
                    new <.Item [<.Unit>,
                        <.Empty>]>]>
               >
