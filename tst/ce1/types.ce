#define Maybe(x) <(),x>
#define List(x) <?[x,^]>
#define String List(_int)

#define Token <(),_int,KEY,String,(),_int>
    -- EOF,sym,key,var,unit,num

#define Type <(),List(^^),List(^^)>
    -- Unit, Tuple, Union

#define Expr_(s) <(), String, List(^^), [_int,^], [^,_int], [^,_int], [^,_int], [^,^], [Type,s]>
    -- Unit, Var, TCons, UCons, TDisc, UDisc, UPred, Call, Func

#define Stmt_(e) <(), [String,Type,e], List(^^)>
    -- Pass, Var, Seq

#define Expr Expr_(Stmt_(^^))
#define Stmt Stmt_(Expr_(^^))
